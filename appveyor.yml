# gitversion will change the version number
version: x-{build}

for:
-
  branches:
    only:
      - master

  environment:
    snk_secret:
      secure: 5QzEIgiDqTIrZruPaIQIvTlNMl5BZ7TGEps7ALyBfHE=
    git_token:
      secure: NeX5NCOUXsCLc1UjTJjqB9F02FZ8Wq0VsxqTXC8kBdyK6zjxjebrf/9Da2sY1Kql

configuration: Release
os: Visual Studio 2017

init:
  - git config --global core.autocrlf input
  - git config --global credential.helper store
  - ps: Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:git_token):x-oauth-basic@github.com`n"
  - git config --global user.email "noreply@emanon.org"
  - git config --global user.name "Appveyor CI"

cache:
  - packages -> **\packages.config      # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified

environment:
  COVERALLS_REPO_TOKEN:
    secure: j4sELCwhVRRjNXFVhjPZjdG4y2itz8jrExhlyDU/lTiLlRQ/P4brB69MGQRFBQae
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

# tools we need for bulding/testing/deploying
install:
  - choco install gitversion.portable -y
  - npm install gh-pages -g
  - choco install docfx -y
  # No longer signing the assembly
  #- nuget install secure-file -ExcludeVersion
  #- if defined snk_secret secure-file\tools\secure-file -decrypt src\ipfs.ci.snk.enc -secret %snk_secret% -out src\ipfs.dev.snk

pull_requests:
  do_not_increment_build_number: true

nuget:
  disable_publish_on_pr: true

before_build:
  - ps: gitversion /output buildserver /updateAssemblyInfo >gitversion.log
  - echo %GitVersion_MajorMinorPatch%
  - echo %GitVersion_NuGetVersion%

build_script:
  - dotnet build -c %CONFIGURATION% -p:Version=%GitVersion_MajorMinorPatch% -p:AssemblyVersion=%GitVersion_MajorMinorPatch%

after_build:
# Build documentation in doc\_site
  - cmd: builddocs.cmd
  - cmd: 7z a -tzip docs.zip doc\_site
  - cmd: appveyor PushArtifact docs.zip
  - if defined git_token gh-pages -d doc\_site -m "new docs %GitVersion_FullSemVer%"

test_script:
  - dotnet test -c %CONFIGURATION% --no-build --no-restore test

after_test: 
# Generate coverage report
    - dotnet test -c %CONFIGURATION% -f netcoreapp2.1 --no-build --no-restore test /p:CollectCoverage=true
    - choco install codecov -y
    - codecov -f "test/coverage.opencover.xml"
    - dotnet tool install --global coveralls.net --version 1.0.0
    - if defined COVERALLS_REPO_TOKEN
        csmacnz.coveralls.exe
        --opencover -i test/coverage.opencover.xml --useRelativePaths --serviceName appveyor --jobId %APPVEYOR_BUILD_NUMBER%

artifacts:
  - path: 'src/**/*.nupkg'
    name: nupkg
  - path: 'src/**/*.snupkg'
    name: snupkg

# publish NuGet package on tag build
deploy:
- provider: NuGet
  api_key:
    secure: OdmGEj/l0K0ZPDmXAYx+fryCzV012eTrM29ALBuL0waxvwLvrufdDXiI+1iNhWEG
  on:
    appveyor_repo_tag: true
